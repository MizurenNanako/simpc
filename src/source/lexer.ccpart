/* Generated by re2c 3.1 on Fri Mar  1 19:00:43 2024 */
#line 1 "/home/tci/Repos/Simple-Compiler/src/source/rules.txt"

#line 5 "/home/tci/Repos/Simple-Compiler/src/source/lexer.ccpart"
{
	char_type yych;
	unsigned int yyaccept = 0;
	unsigned int yystate = 0;
	for (;;) {
		switch (yystate) {
			case 0:
				if (lessthan(24)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '"':
						skip();
						yystate = 2;
						continue;
					case '$':
					case 'A' ... 'K':
					case 'M' ... 'T':
					case 'V' ... 'Z':
					case '_':
					case 'a' ... 't':
					case 'v' ... 'z':
						skip();
						yystate = 3;
						continue;
					case '\'':
						skip();
						yystate = 6;
						continue;
					case '+':
					case '-':
						skip();
						yystate = 7;
						continue;
					case '.':
						skip();
						yystate = 8;
						continue;
					case '0':
						skip();
						yystate = 9;
						continue;
					case '1' ... '9':
						skip();
						yystate = 11;
						continue;
					case 'L':
					case 'U':
						skip();
						yystate = 13;
						continue;
					case 'u':
						skip();
						yystate = 14;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 1:
				restore();
				switch (yyaccept) {
					case 0:
						yystate = 10;
						continue;
					case 1:
						yystate = 5;
						continue;
					case 2:
						yystate = 16;
						continue;
					case 3:
						yystate = 22;
						continue;
					case 4:
						yystate = 27;
						continue;
					default:
						yystate = 42;
						continue;
				}
			case 2:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '\n':
					case '\'':
						yystate = 1;
						continue;
					case '"':
						skip();
						yystate = 15;
						continue;
					case '\\':
						skip();
						yystate = 17;
						continue;
					default:
						skip();
						yystate = 2;
						continue;
				}
			case 3:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				yystate = 4;
				continue;
			case 4:
				switch (yych) {
					case '$':
					case '0' ... '9':
					case 'A' ... 'Z':
					case '_':
					case 'a' ... 'z':
						skip();
						yystate = 3;
						continue;
					default:
						yystate = 5;
						continue;
				}
			case 5:
#line 39 "/home/tci/Repos/Simple-Compiler/src/source/rules.txt"
				{ /* identifier */ }
#line 129 "/home/tci/Repos/Simple-Compiler/src/source/lexer.ccpart"
			case 6:
				yych = peek();
				switch (yych) {
					case '\n':
						yystate = 1;
						continue;
					case '\'':
						skip();
						yystate = 19;
						continue;
					case '.':
						skip();
						yystate = 21;
						continue;
					case '0' ... '9':
						skip();
						yystate = 23;
						continue;
					case '\\':
						skip();
						yystate = 24;
						continue;
					default:
						skip();
						yystate = 18;
						continue;
				}
			case 7:
				yych = peek();
				switch (yych) {
					case '.':
						yystate = 1;
						continue;
					case '1' ... '9':
						skip();
						yystate = 11;
						continue;
					default:
						yystate = 20;
						continue;
				}
			case 8:
				yych = peek();
				switch (yych) {
					case '\'':
					case '0' ... '9':
						skip();
						yystate = 25;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 9:
				yyaccept = 0;
				backup();
				yych = peek();
				switch (yych) {
					case '\'':
						skip();
						yystate = 19;
						continue;
					case '.':
						skip();
						yystate = 25;
						continue;
					case '0' ... '9':
						skip();
						yystate = 26;
						continue;
					case 'B':
					case 'b':
						skip();
						yystate = 28;
						continue;
					case 'X':
					case 'x':
						skip();
						yystate = 30;
						continue;
					default:
						yystate = 10;
						continue;
				}
			case 10:
#line 40 "/home/tci/Repos/Simple-Compiler/src/source/rules.txt"
				{ /* zero */ }
#line 217 "/home/tci/Repos/Simple-Compiler/src/source/lexer.ccpart"
			case 11:
				if (lessthan(3)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '\'':
					case '0' ... '9':
						skip();
						yystate = 11;
						continue;
					case '.':
						skip();
						yystate = 25;
						continue;
					case 'L':
					case 'l':
						skip();
						yystate = 32;
						continue;
					case 'U':
					case 'u':
						skip();
						yystate = 33;
						continue;
					case 'Z':
					case 'z':
						skip();
						yystate = 34;
						continue;
					default:
						yystate = 12;
						continue;
				}
			case 12:
#line 41 "/home/tci/Repos/Simple-Compiler/src/source/rules.txt"
				{ /* literial_dec */ }
#line 253 "/home/tci/Repos/Simple-Compiler/src/source/lexer.ccpart"
			case 13:
				yyaccept = 1;
				backup();
				yych = peek();
				switch (yych) {
					case '\'':
						skip();
						yystate = 35;
						continue;
					default:
						yystate = 4;
						continue;
				}
			case 14:
				yyaccept = 1;
				backup();
				yych = peek();
				switch (yych) {
					case '\'':
						skip();
						yystate = 35;
						continue;
					case '8':
						skip();
						yystate = 13;
						continue;
					default:
						yystate = 4;
						continue;
				}
			case 15:
				yyaccept = 2;
				backup();
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '\n':
					case '\'':
						yystate = 16;
						continue;
					case '"':
						skip();
						yystate = 15;
						continue;
					case '\\':
						skip();
						yystate = 17;
						continue;
					default:
						skip();
						yystate = 2;
						continue;
				}
			case 16:
#line 47 "/home/tci/Repos/Simple-Compiler/src/source/rules.txt"
				{ /* literial_string */ }
#line 310 "/home/tci/Repos/Simple-Compiler/src/source/lexer.ccpart"
			case 17:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '0' ... '7':
						skip();
						yystate = 36;
						continue;
					case 'U':
						skip();
						yystate = 37;
						continue;
					case '\\':
					case 'a' ... 'b':
					case 'f':
					case 'n':
					case 'r':
					case 't':
					case 'v':
						skip();
						yystate = 2;
						continue;
					case 'u':
						skip();
						yystate = 38;
						continue;
					case 'x':
						skip();
						yystate = 39;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 18:
				yych = peek();
				switch (yych) {
					case '\n':
						yystate = 1;
						continue;
					case '\'':
						skip();
						yystate = 41;
						continue;
					case '\\':
						skip();
						yystate = 43;
						continue;
					default:
						skip();
						yystate = 40;
						continue;
				}
			case 19:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				yystate = 20;
				continue;
			case 20:
				switch (yych) {
					case '\'':
					case '0' ... '9':
						skip();
						yystate = 19;
						continue;
					case '.':
						skip();
						yystate = 25;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 21:
				yyaccept = 3;
				backup();
				yych = peek();
				switch (yych) {
					case '\n':
						yystate = 22;
						continue;
					case '\'':
					case '0' ... '9':
						skip();
						yystate = 25;
						continue;
					case 'E':
					case 'P':
					case 'e':
					case 'p':
						skip();
						yystate = 44;
						continue;
					case 'F':
					case 'L':
					case 'f':
					case 'l':
						skip();
						yystate = 45;
						continue;
					case '\\':
						skip();
						yystate = 43;
						continue;
					default:
						skip();
						yystate = 40;
						continue;
				}
			case 22:
#line 45 "/home/tci/Repos/Simple-Compiler/src/source/rules.txt"
				{ /* literial_real */ }
#line 423 "/home/tci/Repos/Simple-Compiler/src/source/lexer.ccpart"
			case 23:
				yych = peek();
				switch (yych) {
					case '\n':
						yystate = 1;
						continue;
					case '\'':
						skip();
						yystate = 46;
						continue;
					case '.':
						skip();
						yystate = 25;
						continue;
					case '0' ... '9':
						skip();
						yystate = 47;
						continue;
					case '\\':
						skip();
						yystate = 43;
						continue;
					default:
						skip();
						yystate = 40;
						continue;
				}
			case 24:
				yych = peek();
				switch (yych) {
					case '0' ... '7':
						skip();
						yystate = 48;
						continue;
					case 'U':
						skip();
						yystate = 49;
						continue;
					case '\\':
					case 'a' ... 'b':
					case 'f':
					case 'n':
					case 'r':
					case 't':
					case 'v':
						skip();
						yystate = 18;
						continue;
					case 'u':
						skip();
						yystate = 50;
						continue;
					case 'x':
						skip();
						yystate = 51;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 25:
				yyaccept = 3;
				backup();
				if (lessthan(3)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '\'':
					case '0' ... '9':
						skip();
						yystate = 25;
						continue;
					case 'E':
					case 'P':
					case 'e':
					case 'p':
						skip();
						yystate = 52;
						continue;
					case 'F':
					case 'L':
					case 'f':
					case 'l':
						skip();
						yystate = 53;
						continue;
					default:
						yystate = 22;
						continue;
				}
			case 26:
				yyaccept = 4;
				backup();
				if (lessthan(3)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '\'':
						skip();
						yystate = 19;
						continue;
					case '.':
						skip();
						yystate = 25;
						continue;
					case '0' ... '9':
						skip();
						yystate = 26;
						continue;
					case 'L':
					case 'l':
						skip();
						yystate = 54;
						continue;
					case 'U':
					case 'u':
						skip();
						yystate = 55;
						continue;
					case 'Z':
					case 'z':
						skip();
						yystate = 56;
						continue;
					default:
						yystate = 27;
						continue;
				}
			case 27:
#line 42 "/home/tci/Repos/Simple-Compiler/src/source/rules.txt"
				{ /* literial_oct */ }
#line 553 "/home/tci/Repos/Simple-Compiler/src/source/lexer.ccpart"
			case 28:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '0' ... '1':
						skip();
						yystate = 28;
						continue;
					default:
						yystate = 29;
						continue;
				}
			case 29:
#line 44 "/home/tci/Repos/Simple-Compiler/src/source/rules.txt"
				{ /* literial_bin */ }
#line 569 "/home/tci/Repos/Simple-Compiler/src/source/lexer.ccpart"
			case 30:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 30;
						continue;
					default:
						yystate = 31;
						continue;
				}
			case 31:
#line 43 "/home/tci/Repos/Simple-Compiler/src/source/rules.txt"
				{ /* literial_hex */ }
#line 587 "/home/tci/Repos/Simple-Compiler/src/source/lexer.ccpart"
			case 32:
				yych = peek();
				switch (yych) {
					case 'L':
					case 'l':
						skip();
						yystate = 34;
						continue;
					case 'U':
					case 'u':
						skip();
						yystate = 57;
						continue;
					default:
						yystate = 12;
						continue;
				}
			case 33:
				yych = peek();
				switch (yych) {
					case 'L':
					case 'l':
						skip();
						yystate = 58;
						continue;
					case 'Z':
					case 'z':
						skip();
						yystate = 57;
						continue;
					default:
						yystate = 12;
						continue;
				}
			case 34:
				yych = peek();
				switch (yych) {
					case 'U':
					case 'u':
						skip();
						yystate = 57;
						continue;
					default:
						yystate = 12;
						continue;
				}
			case 35:
				yych = peek();
				switch (yych) {
					case '\n':
					case '\'':
						yystate = 1;
						continue;
					case '\\':
						skip();
						yystate = 24;
						continue;
					default:
						skip();
						yystate = 18;
						continue;
				}
			case 36:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '0' ... '7':
						skip();
						yystate = 59;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 37:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 60;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 38:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 61;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 39:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 62;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 40:
				yych = peek();
				switch (yych) {
					case '\'':
						skip();
						yystate = 41;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 41:
				yystate = 42;
				continue;
			case 42:
#line 46 "/home/tci/Repos/Simple-Compiler/src/source/rules.txt"
				{ /* literial_char */ }
#line 721 "/home/tci/Repos/Simple-Compiler/src/source/lexer.ccpart"
			case 43:
				yych = peek();
				switch (yych) {
					case '0' ... '7':
						skip();
						yystate = 63;
						continue;
					case 'U':
						skip();
						yystate = 64;
						continue;
					case '\\':
					case 'a' ... 'b':
					case 'f':
					case 'n':
					case 'r':
					case 't':
					case 'v':
						skip();
						yystate = 40;
						continue;
					case 'u':
						skip();
						yystate = 65;
						continue;
					case 'x':
						skip();
						yystate = 66;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 44:
				yych = peek();
				switch (yych) {
					case '\'':
						skip();
						yystate = 41;
						continue;
					case '+':
					case '-':
						skip();
						yystate = 67;
						continue;
					case '0' ... '9':
						skip();
						yystate = 68;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 45:
				yych = peek();
				switch (yych) {
					case '\'':
						skip();
						yystate = 41;
						continue;
					default:
						yystate = 22;
						continue;
				}
			case 46:
				yyaccept = 5;
				backup();
				yych = peek();
				switch (yych) {
					case '\'':
					case '0' ... '9':
						skip();
						yystate = 19;
						continue;
					case '.':
						skip();
						yystate = 25;
						continue;
					default:
						yystate = 42;
						continue;
				}
			case 47:
				yych = peek();
				switch (yych) {
					case '\'':
						skip();
						yystate = 46;
						continue;
					default:
						yystate = 20;
						continue;
				}
			case 48:
				yych = peek();
				switch (yych) {
					case '0' ... '7':
						skip();
						yystate = 69;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 49:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 70;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 50:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 71;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 51:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 72;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 52:
				yych = peek();
				switch (yych) {
					case '+':
					case '-':
						skip();
						yystate = 67;
						continue;
					case '0' ... '9':
						skip();
						yystate = 68;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 53:
				yystate = 22;
				continue;
			case 54:
				yych = peek();
				switch (yych) {
					case 'L':
					case 'l':
						skip();
						yystate = 56;
						continue;
					case 'U':
					case 'u':
						skip();
						yystate = 73;
						continue;
					default:
						yystate = 27;
						continue;
				}
			case 55:
				yych = peek();
				switch (yych) {
					case 'L':
					case 'l':
						skip();
						yystate = 74;
						continue;
					case 'Z':
					case 'z':
						skip();
						yystate = 73;
						continue;
					default:
						yystate = 27;
						continue;
				}
			case 56:
				yych = peek();
				switch (yych) {
					case 'U':
					case 'u':
						skip();
						yystate = 73;
						continue;
					default:
						yystate = 27;
						continue;
				}
			case 57:
				yystate = 12;
				continue;
			case 58:
				yych = peek();
				switch (yych) {
					case 'L':
					case 'l':
						skip();
						yystate = 57;
						continue;
					default:
						yystate = 12;
						continue;
				}
			case 59:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '0' ... '7':
						skip();
						yystate = 2;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 60:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 75;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 61:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 39;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 62:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 2;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 63:
				yych = peek();
				switch (yych) {
					case '0' ... '7':
						skip();
						yystate = 76;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 64:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 77;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 65:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 78;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 66:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 79;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 67:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
						skip();
						yystate = 68;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 68:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '0' ... '9':
						skip();
						yystate = 68;
						continue;
					case 'F':
					case 'L':
					case 'f':
					case 'l':
						skip();
						yystate = 53;
						continue;
					default:
						yystate = 22;
						continue;
				}
			case 69:
				yych = peek();
				switch (yych) {
					case '0' ... '7':
						skip();
						yystate = 18;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 70:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 80;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 71:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 51;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 72:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 18;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 73:
				yystate = 27;
				continue;
			case 74:
				yych = peek();
				switch (yych) {
					case 'L':
					case 'l':
						skip();
						yystate = 73;
						continue;
					default:
						yystate = 27;
						continue;
				}
			case 75:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 81;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 76:
				yych = peek();
				switch (yych) {
					case '0' ... '7':
						skip();
						yystate = 40;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 77:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 82;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 78:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 66;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 79:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 40;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 80:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 83;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 81:
				if (lessthan(1)) not_enough_input();
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 38;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 82:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 84;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 83:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 50;
						continue;
					default:
						yystate = 1;
						continue;
				}
			case 84:
				yych = peek();
				switch (yych) {
					case '0' ... '9':
					case 'A' ... 'F':
					case 'a' ... 'f':
						skip();
						yystate = 65;
						continue;
					default:
						yystate = 1;
						continue;
				}
		}
	}
}
#line 49 "/home/tci/Repos/Simple-Compiler/src/source/rules.txt"
